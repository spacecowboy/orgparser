apply plugin: 'java-library'
apply plugin: 'pmd'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'maven-publish'
apply plugin: 'signing'

dependencies {
    api 'joda-time:joda-time:2.3'
    testImplementation 'junit:junit:4.12'
}

pitest {
  threads = 4
  outputFormats = ['XML', 'HTML']
}

test {
  testLogging {
    // Make sure output from
    // standard out or error is shown
    // in Gradle output.
    showStandardStreams = false

    // Or we use events method:
    // events 'standard_out', 'standard_error'

    // Or set property events:
    // events = ['standard_out', 'standard_error']

    // Instead of string values we can
    // use enum values:
    // events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
    //        org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
  }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    repositories {
        maven {
            name = "localFile"
            url = "file://${buildDir}/repo"
        }
        maven {
            name = "mavenCentral"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username findProperty("nexusUsername")
                password findProperty("nexusPassword")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = 'org.cowboyprogrammer.orgparser'
            artifactId = 'orgparser'
            version = version

            // artifact("$buildDir/libs/${project.getName()}-release.aar")
            artifact jar
            artifact javadocJar
            artifact sourcesJar

            pom {
                name = "OrgParser"
                description = "A Java parser for org-mode files."
                url = "https://github.com/spacecowboy/orgparser"
                developers {
                    developer {
                        id = 'spacecowboy'
                        name = 'Space Cowboy'
                        email = 'spacecowboy@cowboyprogrammer.org'
                    }
                }
                licenses {
                    license {
                        name = "GNU GENERAL PUBLIC LICENSE Version 3.0"
                        url = "https://www.gnu.org/licenses/gpl-3.0.html"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/spacecowboy/orgparser.git"
                    developerConnection = "scm:git:ssh://git@github.com:spacecowboy/orgparser.git"
                    url = "https://github.com/spacecowboy/orgparser"
                }
            }
        }
    }
}

signing {
  // You may have to create a dummy script called gpg2 which exec /usr/bin/gpg
    useGpgCmd()
    sign publishing.publications.maven
}
